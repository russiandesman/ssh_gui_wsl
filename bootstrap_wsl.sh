#! /bin/bash

echo "Run this only in WSL, if accidentally run under real Linux press Ctrl+C now"

sudo add-apt-repository ppa:far2l-team/ppa -y
sudo apt install far2l

sudo apt install openssh-server
sudo apt install putty-tools

WIN_HOME=`wslpath "$(wslvar USERPROFILE)"`/WSL

mkdir -p $WIN_HOME

echo "set password to none by pressing enter twice"
puttygen -t rsa -b 2048 -C "access to wsl" -o $WIN_HOME/wsl_access.ppk -q
puttygen $WIN_HOME/wsl_access.ppk -o $WIN_HOME/wsl_access.pub -O public-openssh
puttygen $WIN_HOME/wsl_access.ppk -o $WIN_HOME/wsl_access.private -O private-openssh

# we only need single key to access WSL from host
cat $WIN_HOME/wsl_access.pub > ~/.ssh/authorized_keys

# set up ssh server in WSL.
# it must use non-22 port, as port 22 can be busy by host's own SSH server
sudo tee /etc/ssh/sshd_config >/dev/null << THE_END
# this file autogenerated by bootstrapping script
Include /etc/ssh/sshd_config.d/*.conf
Port 2211
ListenAddress 0.0.0.0
PasswordAuthentication no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
THE_END

cp windows/* $WIN_HOME/

echo "Now please go to Windows and run setup.vbs from WSL folder in your $(wslvar USERPROFILE)"

exit 0